managed;
//Strict ( 1 );

define behavior for ZBM_I_PRODUCT alias Product
implementation in class zbp_bm_i_product unique
persistent table zbm_d_product
lock master
//authorization master ( instance )
etag master ChangeTime
{
  create;
  update;
  delete;
  association _Market { create; }
  association _Orrder { create; }

field ( numbering : managed, readonly ) ProdUuid;
field ( mandatory ) ProdId, PgId, Price ;


determination setFirstPhase on modify { create; }

validation validatePG on save { field PgId; create; }
validation prodId on save { field ProdId; create; }

action ( features : instance ) makeCopy result [1] $self;
action ( features : instance ) moveToNextPhase result [1] $self;

  mapping for zbm_d_product
  {

    ProdUuid      = prod_uuid;
    ProdId        = prod_id;
    PgId          = pg_id;
    PhaseId       = phase_id;
    Height        = height;
    Depth         = depth;
    Width         = width;
    SizeUom       = size_uom;
    Price         = price;
    PriceCurrency = price_currency;
    taxrate       = Taxrate;
    CreatedBy     = created_by;
    CreationTime  = creation_time;
    ChangedBy     =  changed_by;
    ChangeTime    =  Change_time;
  }

}

define behavior for ZBM_I_MARKET alias Market
implementation in class zbp_bm_i_market unique
persistent table zbm_d_prod_mrkt
lock dependent by _Product
//authorization dependent by _Product
//etag master <field_name>
{
  update;
  delete;

  field (numbering : managed, readonly ) MrktUuid ;
  field ( readonly ) ProdUuid;
  association _Product;

validation validateMarket on save { field Mrktid; create; }
validation valideStartDate on save { field Startdate; create; }
validation valideEndDate on save { field Enddate; create; }
validation checkDuplicates on save { field Mrktid; create; }


action ( features : instance ) confirm result [1] $self;


  mapping for zbm_d_prod_mrkt
  {

    ProdUuid     = prod_uuid ;
    MrktUuid     = mrkt_uuid;
    Mrktid       = mrktid;
    Status       = status;
    Startdate    = startdate;
    Enddate      = enddate;
    CreatedBy    = created_by;
    CreationTime = creation_time;
    ChangedBy    = changed_by;
    ChangeTime   = change_time;
  }

}


define behavior for ZBM_I_ORDER alias Orrder
implementation in class zbp_bm_i_order unique
persistent table zbm_d_mrkt_order
lock dependent by _Product
//authorization dependent by _Product
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) ProdUuid;
  association _Product;


determination calculateOrderId on modify { create; }
determination setCalendarYear on modify { create; }
determination calculateAmount on modify { create; }


validation validateDeliveyDate on save { field DeliveryDate; create; }

  mapping for zbm_d_mrkt_order
  {

    ProdUuid     = prod_uuid;
    MrktUuid     = mrkt_uuid;
    OrderUuid    = order_uuid;
    Orderid      = orderid;
    Quantity     = quantity;
    DeliveryDate = delivery_date;
    Netamount    = netamount;
    Grossamount  = grossamount;
    Amountcurr   = amountcurr;
    CreatedBy    = created_by;
    CreationTime = creation_time;
    ChangedBy    = changed_by;
    ChangeTime   = change_time;

   }

}